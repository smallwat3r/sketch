#!/usr/bin/env bash
#         __       __      __
#    ___ / /_____ / /_____/ /
#   (_-</  '_/ -_) __/ __/ _ \
#  /___/_/\_\\__/\__/\__/_//_/
#
# Matthieu Petiteau <mpetiteau.pro@gmail.com>
#
# MIT License
#
# Copyright (c) 2019 Matthieu Petiteau
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e
self=${0##*/}
version="$self v0.2 (Matthieu Petiteau)"

_load_config() {
  # Source configs if set up in sketchrc file.
  local _conf_dir=(
    $XDG_CONFIG_HOME/.sketchrc
    $HOME/.config/.sketchrc
    $HOME/.sketchrc
  )
  for d in "${_conf_dir[@]}"; do
    if [[ -f $d ]]; then
      source $d
      break
    fi
  done
}

_load_editor() {
  # Check first for editor from sketchrc, then user default editor,
  # and finally default to vim.
  if [[ -z $SKETCH_EDITOR ]]; then
    if [[ -z $EDITOR ]]; then
      _sketch_editor=vim
    else
      _sketch_editor=$EDITOR
    fi
  else
    _sketch_editor=$SKETCH_EDITOR
  fi
}

_load_archives_dir() {
  # Pick archives dir.
  if [[ -z $SKETCH_ARCHIVES ]]; then
    if [[ -d $XDG_DATA_HOME ]]; then
      _sketch_archives=$XDG_DATA_HOME/sketch_archives
    else
      _sketch_archives=$HOME/.local/share/sketch_archives
    fi
  else
    _sketch_archives=$SKETCH_ARCHIVES
  fi
}

_init() {
  _load_config
  _load_editor
  _load_archives_dir

  # Create archives dir if doesn't exist.
  if [[ ! -d $_sketch_archives ]]; then
    mkdir -p $_sketch_archives
  fi
}

_showhelp() {
  cat <<EOF
      __       __      __
 ___ / /_____ / /_____/ /
(_-</  '_/ -_) __/ __/ _ \'
/___/_/\_\\__/\__/\__/_//_/

Copyright 2020 Matthieu Petiteau, all rights reserved.
$version

$self is a small productivity tool to rapidly generate and
access draft files from the terminal.

$self            automatically creates and open a new draft
                  file from the temporary directory.

$self <number>   open archived saved file. Ex:
                  $self 1 will reopen the last saved file.
                  $self 2 will reopen the previous one
                  etc...

$self ls         list all archived files.

$self purge      delete all the archived files.

Other Arguments
------------------------------------------------------------
-h, --help        show this help message and exit.
-v, --version     script version.
EOF
}

_new() {
  local _file=$(($(ls $_sketch_archives | wc -l) + 1)).sketch
  $_sketch_editor $_sketch_archives/$_file
}

_reopen() {
  local _av=$(ls $_sketch_archives | wc -l)
  if (($1 == 0)); then
    printf 'Index starts at 1.\n' >&2
    exit 1
  elif (($_av >= $1)); then
    local _file=$_sketch_archives/$1.sketch
    if [ -f $_file ]; then
      $_sketch_editor $_file
    else
      printf 'It seems that this file has been removed.\n' >&2
      exit 1
    fi
  else
    printf 'No file found, try to look at a lower level.\n'
  fi
}

_purge() {
  if [[ -n $(ls -A $_sketch_archives 2>/dev/null) ]]; then
    rm $_sketch_archives/*
    printf 'Archived files have been deleted.\n'
  else
    printf 'No files to delete.\n'
  fi
}

_list() {
  ls -lt -A $_sketch_archives |
    awk '{
      split($9, name, ".");
      if (name[1])
        print "[", name[1], "]", "last edit @", $8, "on", $7, $6;
    }'
}

_init
_param=$1

if [[ -z $_param ]]; then
  _new
  exit 0
fi

case $_param in
  $(awk '/^[0-9]+$/' <<<${_param}))
    _reopen "${_param}"
    ;;
  purge)
    _purge
    ;;
  ls)
    _list
    ;;
  -h | --help)
    _showhelp
    ;;
  -v | --version)
    printf "$version\n"
    ;;
  *)
    printf 'Command not found.\n' >&2
    exit 127
    ;;
esac
exit 0
